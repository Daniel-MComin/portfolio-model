@use "../../styles/variables" as var;

.container {
  display: flex;
  justify-content: center;
  align-items: center;
  padding-top: 60px;
  gap: 25px;

  .presentation {
    display: flex;
    justify-content: end;
    align-items: end;
    flex-direction: column;
    text-align: end;

    .title {
      margin-bottom: -19px;
      h1 {
        .color-title {
          display: inline-block;
          overflow: hidden;
          white-space: nowrap;
          border-right: 2px solid;
          animation: typing 10s steps(30, end) infinite,
            blink-caret 0.75s step-end infinite;
        }
      }
    }

    .subtitle {
      h2 {
        font-weight: 400;
        color: var.$ebony-green-color;
      }
      h1 {
        font-size: 2.9rem;
        color: var.$black-blue-color;

        span {
          display: inline-block;
          transition: transform 0.2s ease-in-out, color 0.2s ease-in-out;

          &:hover {
            transform: scale(1.2);
            color: var.$dark-blue-color;
          }
        }
      }
    }

    .text {
      width: 400px;
      font-size: 1rem;
      font-weight: 500;
      margin-top: 20px;
      text-align: right;
      color: var.$ebony-green-color;
    }

    .button {
      padding-top: 20px;
      .btn {
        padding: 10px;
        text-decoration: none;
        cursor: pointer;
        color: var.$white-green-color;
        background-color: var.$black-blue-color;
        border-radius: 24px;
        font-weight: 800;
        letter-spacing: 1px;
        font-size: 1rem;
        text-transform: uppercase;
        box-shadow: 1px 4px var.$dark-blue-color;

        &:hover {
          background-color: var.$dark-blue-color;
          box-shadow: 1px 4px var.$dark-blue-color-variant;
        }
      }
    }
  }

  .photo {
    width: 400px;
    height: 400px;
    border-radius: 50%;
    border: 1px solid var.$white-blue-color;
  }
}

@keyframes typing {
  0% {
    width: 0;
  }
  50% {
    width: 100%;
  }
  100% {
    width: 100%;
  }
}

@keyframes blink-caret {
  from,
  to {
    border-color: transparent;
  }
  50% {
    border-color: black;
  }
}
